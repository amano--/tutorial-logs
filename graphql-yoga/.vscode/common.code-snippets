{
  "functional component": {
    "scope": "typescriptreact,javascriptreact ",
    "prefix": "fc",
    "body": [
      "type ${1:componentName}Props = { hoge: string }",
      "const $1: VFC<$1Props> = (props) => {",
      "  const [${2:state}, set$2] = useState(false)",
      "return (",
      "  <>",
      "    {props.hoge}",
      "  </>",
      ")",
  "}",

      ""
    ],
    "description": "React functional component template"
  },

  "jest describe template": {
    "scope": "typescriptreact,javascriptreact ",
    "prefix": "desc",
    "body":["describe('simple test', () => {",
      "  it('dom draw', () => {",
      "    const target = render(<><div>hoge</div></>)",
      "",
      "    const domText = prettyDOM(target.baseElement)",
      "    console.log(domText)",
      "",
      "    expect(domText).toContain('hoge')",
      "  })",
      "})"] ,
    "description": "jest describe template"
  },

  "lodash": {
    "scope": "typescript,typescriptreact,javascriptreact ",
    "prefix": "lodash",
    "body": [
      "import { isString } from 'lodash'"
    ],
    "description": "lodash import statement"
  },

  "style": {
    "scope": "typescriptreact,javascriptreact ",
    "prefix": "style",
    "body": [
      "style={{",
      "display: 'flex',",
      "flexDirection: 'row',",
      "justifyContent: 'center',",
      "alignItems: 'center',",
      "}}",
    ],
    "description": "CSSProperties complication statement"
  },

  "switch": {
    "scope": "typescriptreact,javascriptreact ",
    "prefix": "switc",
    "body":["switch (type) {",
"    case '':",
"        return (<></>)",
"    case '':",
"        return (<></>)",
"    case '':",
"        return (<></>)",
"    default:",
"      const exhaustiveCheck: never = type",
"      return <></>",
"}"] ,
    "description": "switch for exhaustive check"
},

"storybook_story_boilerplate": {
  "scope": "typescriptreact,javascriptreact ",
  "prefix": "story",
  "body": [
    "import React from 'react'",
    "import { Story, Meta } from '@storybook/react/types-6-0'",
    "import { ${1:componentName}, $1Props } from '~/components/${2:path}'",
    "",
    "export default {",
    "  title: '$2/$1',",
    "  component: $1,",
    "} as Meta",
    "",
    "const Template: Story<$1Props> = (args) => ( <$1 {...args} /> )",
    "",
    "export const ${3:FirstStory} = Template.bind({})",
    "$3.storyName = '${4:displayName}'",
    "$3.args = {",
    "  $5,",
    "}",
  ],
  "description": "Storybook story boilerplate"
}
}
